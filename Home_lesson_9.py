"""
Home Work 9

Задания для самоподготовки
1. Написать рекурсивную функцию для вычисления факториала числа n:

2. Написать функцию для вычисления среднего арифметического переданных ей значений в виде аргументов:

arg1, arg2, …, argN

3. Реализовать функцию сортировки выбранных элементов по возрастанию: элементы передаются функции в виде списка и
выбираются они с помощью функции-селектора, указанной в качестве второго параметра. Привести примеры вызова функции сортировки
с разными видами селекторов. Селекторы реализовать в виде лямбда-функций.

"""

# ++++++++++++++++++++++++++++ Задание 1 +++++++++++++++++++++++++++++++++++++
'''
1. Написать рекурсивную функцию для вычисления факториала числа n:
'''
print('++++++++++++++++++++++++++++ Задание 1 +++++++++++++++++++++++++++++++++++++' + '\n')

count_fact = int(input("Введите число факториал какого числа Вам необходимо вычислить: "))

def factor_user(count_fact):
    """
    Функция вычисляет факториал числа то есть перемножает значения от 1 до count_fact значения
    Функция вызывает себя столько раз пока условие не станет истинным
    :param count_fact: Заданное число пользователем
    :return: результат вычисления
    """
    if count_fact == 0:
        return 1
    else:
        return count_fact * factor_user(count_fact - 1)

print(factor_user(count_fact))


# ++++++++++++++++++++++++++++ Задание 2 +++++++++++++++++++++++++++++++++++++
'''
2. Написать функцию для вычисления среднего арифметического переданных ей значений в виде аргументов:

arg1, arg2, …, argN

'''
print('++++++++++++++++++++++++++++ Задание 2 +++++++++++++++++++++++++++++++++++++' + '\n')

value_1 = int(input("Ввидите число: "))     # Вводим значения
value_2 = int(input("Ввидите число: "))
value_3 = int(input("Ввидите число: "))
value_4 = int(input("Ввидите число: "))
value_5 = int(input("Ввидите число: "))

def func_multi_user(*args):
    """
    Функцию для вычисления среднего арифметического.
    :param args: с помощью *args можно передавать любое количество позиционных аргументов.
    :return: возвращает результат значения.
    """
    result = 1  # Переменная для получения суммы всех аргументом

    for num in args:    # Перебираю значения аргументов и складываю
        result += num

    return result / 5   # Полученные значения делим на количество аргументов

print(f"Средне арифметическое = {func_multi_user(value_1, value_2, value_3, value_4, value_5)}") # Вызываем функцию


# ++++++++++++++++++++++++++++ Задание 3 +++++++++++++++++++++++++++++++++++++
'''
3. Реализовать функцию сортировки выбранных элементов по возрастанию: элементы передаются функции в виде списка и
выбираются они с помощью функции-селектора, указанной в качестве второго параметра. Привести примеры вызова функции сортировки
с разными видами селекторов. Селекторы реализовать в виде лямбда-функций.
'''
print('++++++++++++++++++++++++++++ Задание 3 +++++++++++++++++++++++++++++++++++++' + '\n')

val_list = [105, 45, 3, 1456, 20, 4567, 323, 43, 43]     # Вводим значения


def multi_value(v_list, func):    #
    """
    Основная работа распечатывать значения преданные в нее из лямбда-функции
    :param v_list: Список значений
    :param func: Любая функция
    :return: Ни чего не возвращает
    """
    for elem in func(v_list):
        print(elem, end=" ")
    print('\n')


multi_value(val_list, lambda a: sorted(a))   # сортировка по возрастанию
multi_value(val_list, lambda a: sorted(val_list, reverse=True)) # сортировка по убыванию
multi_value(val_list, lambda v_list: (x for x in v_list if x % 2 == 0))  # вывести только четные
