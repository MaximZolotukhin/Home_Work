"""
Home Work 4

1. Пользователь вводит с клавиатуры числа, до тех пор, пока не введет число 0. На основе введенных данных нужно сформировать список, состоящий из квадратов введенных чисел.

2. Написать программу удаления из списка

['+7912123456', '+7915213456', '+6915213456', '+4915213456', '+7915213456']

всех номеров с кодом «+7».

3. Написать программу циклического сдвига элементов списка влево. Например, дан список:

[1,2,3,4,5,6]

после сдвига на один элемент влево, должны получить:

[2,3,4,5,6,1]

Реализовать через цикл, перебирая все элементы.

4. Написать аналогичную программу циклического сдвига, но теперь вправо.
"""

# ++++++++++++++++++++++++++++ Задание 1 +++++++++++++++++++++++++++++++++++++
'''
1. Пользователь вводит с клавиатуры числа, до тех пор, пока не введет число 0. На основе введенных данных нужно сформировать список, состоящий из квадратов введенных чисел.
'''
print('++++++++++++++++++++++++++++ Задание 1 +++++++++++++++++++++++++++++++++++++' + '\n')

trigger = True  # Создаю триггер для работы цикла while
list_user_number = []  # Создаю пустой список

while trigger == True:  # Создаю цикл для ввода чисел пользователем
    user_number = input("Введите число: ")  # Предлагаю пользователю ввести данные
    if user_number == '0' or user_number == '': # Проверка. Если пользователь ввел 0  то делаю триггер на ноль и прекращаю выполнение цикла
        trigger = False  # Можно использовать break, тогда не нужно будет использовать триггер
    else:
        list_user_number.append(int(user_number))    # Иначе добавляю в список цифры введенные пользователем преобразуя его в тип int()

square_list = list()    # Создаю список для хранения данных введенных пользователем и возведенные в квадрат
for num in list_user_number:    # Перебираю пользовательский список
    square_list.append(num ** 2)    # Возвожу число в степень и сохраняю в список значения возведенных в квадрат

print(square_list)
print('\n')

# ++++++++++++++++++++++++++++ Задание 2 +++++++++++++++++++++++++++++++++++++
'''
2. Написать программу удаления из списка

['+7912123456', '+7915213456', '+6915213456', '+4915213456', '+7915213456']

всех номеров с кодом «+7».
'''
print('++++++++++++++++++++++++++++ Задание 2 +++++++++++++++++++++++++++++++++++++' + '\n')

list_phone_number = ['+7912123456', '+7915213456', '+6915213456', '+4915213456', '+7915213456'] # Создаю список
print(list_phone_number)
list_index = []     # Создаю список где буду хранить индексы значений начинающихся на +7

for number_phone in list_phone_number:  # Делаю цикл который будет находить необходимые данные, перебираю элементы списка
    if number_phone.count('+7'):        # Если элемент начинается на +7 узнаю его индекс
        list_index.append(number_phone) # Вставляю значение индекса в список

for index in list_index:                # Данные цикл предусмотрен для удаление всех элементов начинающихся на +7 из основного списка по индексу
    list_phone_number.remove(index)

print(list_phone_number)                # Вывожу результат
print('\n')

# ++++++++++++++++++++++++++++ Задание 3 +++++++++++++++++++++++++++++++++++++
'''
3. Написать программу циклического сдвига элементов списка влево. Например, дан список:

[1,2,3,4,5,6]

после сдвига на один элемент влево, должны получить:

[2,3,4,5,6,1]

Реализовать через цикл, перебирая все элементы.
'''
print('++++++++++++++++++++++++++++ Задание 3 +++++++++++++++++++++++++++++++++++++' + '\n')

list_r = [1, 2, 3, 4, 5, 6]                     # Создаю список

def shift(list_shift):                          # Делаю список который будет выполнять условия задания
    list_temp = []                              # Делаю временный список для сдвига

    for index in range(len(list_shift)):        # Перебираю все числа списка
        if index == 0:                          # Если индекс равен 0, это первое значения мы его сохраняем в временную переменную
            num = list_shift[0]
            continue                            # С помощью continue переходим в начало цикла
        else:
            list_temp.append(list_shift[index]) # Иначе мы вставляем значение в временный список

    list_temp.append(num)                       # Добавляем в конце списка значение первого элемента списка, таким образом сдвигая последовательность значений

    global list_r                               # Делаем список глобальный чтобы можно было изменить искомое значение
    list_r = list_temp                          # Переносим данные из временного списка в постоянный
    return list_r                               # Возвращаем значение постоянного списка

print(shift(list_r))                            # Вызываем функцию
print(shift(list_r))
print(shift(list_r))
print(shift(list_r))
print(shift(list_r))
print(shift(list_r))

print('\n')
# ++++++++++++++++++++++++++++ Задание 4 +++++++++++++++++++++++++++++++++++++
'''
4. Написать аналогичную программу циклического сдвига, но теперь вправо.
'''
print('++++++++++++++++++++++++++++ Задание 4 +++++++++++++++++++++++++++++++++++++' + '\n')

list_r = [1, 2, 3, 4, 5, 6]                     # Создаю список

def shift(list_shift):                          # Делаю список который будет выполнять условия задания
    list_temp = []                              # Делаю временный список для сдвига
    index_end = len(list_shift) - 1             # Сохраняю последний элемент списка

    for index in range(len(list_shift)):        # Перебираю все числа списка
        if index == 0:                          # Если индекс равен 0, добавляем последнее значение списка
            list_temp.append(list_shift[index_end])
            continue
        else:
            list_temp.append(list_shift[index - 1])     # Иначе мы вставляем значение в временный список но индекс значения сдвигаем на 1 то есть 1 будет на индексе 1 а не 0

    global list_r                               # Делаем список глобальный чтобы можно было изменить искомое значение
    list_r = list_temp                          # Переносим данные из временного списка в постоянный
    return list_r                               # Возвращаем значения постоянного списка

print(shift(list_r))                            # Вызываем функцию
print(shift(list_r))
print(shift(list_r))
print(shift(list_r))
print(shift(list_r))
print(shift(list_r))
